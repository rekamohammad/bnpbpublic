{"version":3,"sources":["dashboard.js"],"names":[],"mappingsfile":"dashboard.js","sourcesContent":["var BDashboard = BDashboard || {};\n\nBDashboard.loadWidget = function (el, url, data, callback) {\n    Botble.blockUI({\n        target: el,\n        iconOnly: true,\n        overlayColor: 'none'\n    });\n\n    if (typeof data == 'undefined') {\n        data = {};\n    }\n\n    $.ajax({\n        type: 'GET',\n        cache: false,\n        url: url,\n        data: data,\n        success: function (res) {\n            Botble.unblockUI(el);\n            if (!res.error) {\n                el.html(res.data);\n                if (typeof (callback) != 'undefined') {\n                    callback();\n                }\n                if (el.find('.scroller').length != 0) {\n                    Botble.callScroll(el.find('.scroller'));\n                }\n                $('.equal-height').equalHeights();\n\n                BDashboard.initSortable();\n            } else {\n                el.html('<div class=\"dashboard_widget_msg\"><p>' + res.message + '</p>');\n            }\n        },\n        error: function (res) {\n            Botble.unblockUI(el);\n            Botble.handleError(res);\n        }\n    });\n};\n\nBDashboard.initSortable = function () {\n    var el = document.getElementById('list_widgets');\n    Sortable.create(el, {\n        group: 'widgets', // or { name: \"...\", pull: [true, false, clone], put: [true, false, array] }\n        sort: true, // sorting inside list\n        delay: 0, // time in milliseconds to define when the sorting should start\n        disabled: false, // Disables the sortable if set to true.\n        store: null, // @see Store\n        animation: 150, // ms, animation speed moving items when sorting, `0` â€” without animation\n        handle: '.portlet-title',\n        ghostClass: 'sortable-ghost', // Class name for the drop placeholder\n        chosenClass: 'sortable-chosen', // Class name for the chosen item\n        dataIdAttr: 'data-id',\n\n        forceFallback: false, // ignore the HTML5 DnD behaviour and force the fallback to kick in\n        fallbackClass: 'sortable-fallback', // Class name for the cloned DOM Element when using forceFallback\n        fallbackOnBody: false,  // Appends the cloned DOM Element into the Document's Body\n\n        scroll: true, // or HTMLElement\n        scrollSensitivity: 30, // px, how near the mouse must be to an edge to start scrolling.\n        scrollSpeed: 10, // px\n\n        // dragging ended\n        onEnd: function () {\n            var items = [];\n            $.each($('.widget_item'), function (index, widget) {\n                items.push($(widget).prop('id'));\n            });\n            $.ajax({\n                type: 'POST',\n                cache: false,\n                url: BDashboard.routes.update_widget_order,\n                data: {\n                    items: items\n                },\n                success: function (res) {\n                    if (!res.error) {\n                        Botble.showNotice('success', res.message, Botble.languages.notices_msg.success);\n                    } else {\n                        Botble.showNotice('error', res.message, Botble.languages.notices_msg.error);\n                    }\n                },\n                error: function (data) {\n                    Botble.handleError(data);\n                }\n            });\n        }\n    });\n};\n\nBDashboard.init = function () {\n    var list_widgets = $('#list_widgets');\n\n    $(document).on('click', '.portlet > .portlet-title > .tools > a.remove', function (e) {\n        e.preventDefault();\n        $('#hide-widget-confirm-bttn').data('id', $(this).closest('.widget_item').prop('id'));\n        $('#hide_widget_modal').modal('show');\n    });\n\n    list_widgets.on('click', '.page_next, .page_previous', function (e) {\n        e.preventDefault();\n        BDashboard.loadWidget($(this).closest('.portlet').find('.portlet-body'), $(this).prop('href'));\n    });\n\n    list_widgets.on('change', '.number_record .numb', function (e) {\n        e.preventDefault();\n        var paginate = $('.number_record .numb').val();\n        if (!isNaN(paginate)) {\n            BDashboard.loadWidget($(this).closest('.portlet').find('.portlet-body'), $(this).closest('.widget_item').attr('data-url'), {paginate: paginate});\n        } else {\n            Botble.showNotice('error', 'Please input a number!', Botble.languages.notices_msg.error)\n        }\n\n    });\n\n    list_widgets.on('click', '.btn_change_paginate', function (e) {\n        e.preventDefault();\n        var numb = $('.number_record .numb');\n        var paginate = parseInt(numb.val());\n        if ($(this).hasClass('btn_up')) {\n            paginate += 5;\n        }\n        if ($(this).hasClass('btn_down')) {\n            if (paginate - 5 > 0) {\n                paginate -= 5;\n            } else {\n                paginate = 0;\n            }\n        }\n        numb.val(paginate);\n        BDashboard.loadWidget($(this).closest('.portlet').find('.portlet-body'), $(this).closest('.widget_item').attr('data-url'), {paginate: paginate});\n    });\n\n    $('#hide-widget-confirm-bttn').click(function (event) {\n        event.preventDefault();\n        var name = $(this).data('id');\n        $.ajax({\n            type: 'GET',\n            cache: false,\n            url: BDashboard.routes.hide_widget + '?name=' + name,\n            success: function (res) {\n                if (!res.error) {\n                    $('#' + name).fadeOut();\n                    Botble.showNotice('success', res.message, Botble.languages.notices_msg.success);\n                } else {\n                    Botble.showNotice('error', res.message, Botble.languages.notices_msg.error);\n                }\n                $('#hide_widget_modal').modal('hide');\n                var portlet = $(this).closest(\".portlet\");\n\n                if ($(document).hasClass('page-portlet-fullscreen')) {\n                    $(document).removeClass('page-portlet-fullscreen');\n                }\n\n                portlet.find('.portlet-title .fullscreen').tooltip('destroy');\n                portlet.find('.portlet-title > .tools > .reload').tooltip('destroy');\n                portlet.find('.portlet-title > .tools > .remove').tooltip('destroy');\n                portlet.find('.portlet-title > .tools > .config').tooltip('destroy');\n                portlet.find('.portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand').tooltip('destroy');\n\n                portlet.remove();\n            },\n            error: function (data) {\n                Botble.handleError(data);\n            }\n        });\n    });\n\n    $(document).on('click', '.portlet > .portlet-title > .tools > a.reload', function (e) {\n        e.preventDefault();\n        BDashboard.loadWidget($(this).closest('.portlet').find('.portlet-body'), $(this).closest('.widget_item').attr('data-url'));\n    });\n\n\n    $(document).on('click', '.portlet > .portlet-title > .tools > .collapse, .portlet .portlet-title > .tools > .expand', function (e) {\n        e.preventDefault();\n        var state = 'expand';\n        if ($.trim($(this).data('state')) == 'collapse') {\n            $(this).closest('.portlet').find('.portlet-body').removeClass('collapse');\n            state = 'collapse';\n            BDashboard.loadWidget($(this).closest('.portlet').find('.portlet-body'), $(this).closest('.widget_item').attr('data-url'));\n        } else {\n            $(this).closest('.portlet').find('.portlet-body').removeClass('expand');\n        }\n\n        $(this).prop('data-state', state);\n\n        $.ajax({\n            type: 'POST',\n            cache: false,\n            url: BDashboard.routes.edit_widget_item,\n            data: {\n                name: $(this).closest('.widget_item').prop('id'),\n                setting_name: 'state',\n                setting_value: state\n            },\n            success: function () {\n                console.log('Save setting item successfully!');\n            },\n            error: function (data) {\n                Botble.handleError(data);\n            }\n        });\n\n    });\n\n    var manage_widget_modal = $('#manage_widget_modal');\n    $(document).on('click', '.manage-widget', function (e) {\n        e.preventDefault();\n        manage_widget_modal.modal('show');\n    });\n\n    manage_widget_modal.on('change', '.swc_wrap input', function () {\n        $(this).closest('section').find('i').toggleClass('widget_none_color');\n    });\n\n};\n\n$(document).ready(function () {\n    BDashboard.init();\n});"]}